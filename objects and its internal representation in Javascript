Write a blog about objects and its internal representation in Javascript.
-	Objects, in JavaScript is the most important data-type and forms the building blocks for modern JavaScript. 
-	These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive data-types all store a single value each (depending on their types).
-	Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
-	An object, is a reference data type. 
-	Variables that are assigned a reference value are given a reference or a pointer to that value. 
-	That reference or pointer points to the location in memory where the object is stored.
-	The variables don’t actually store the value.

Objects and properties:
-	A JavaScript object has properties associated with it. 
-	A property of an object can be explained as a variable that is attached to the object. 
-	 Object properties are basically the same as ordinary JavaScript variables, except for the attachment to objects. 
-	The properties of an object define the characteristics of the object. 
-	You access the properties of an object with a simple dot-notation:
   	objectName.propertyName

Creating Objects In JavaScript :
1 .Create JavaScript Object Object Literal:
One of easiest way to create a javascript object is object literal, simply define the property and values inside curly braces as shown below
let bike = {name: 'SuperSport', maker:'Ducati', engine:'937cc'};

2 .Create JavaScript Object with Constructor:
Constructor is nothing but a function and with help of new keyword, constructor function allows to create multiple objects of same flavor as shown below
   function Vehicle(name, maker) {
   this.name = name;
   this.maker = maker;
   }
 let car1 = new Vehicle(’Fiesta’, 'Ford’);
 let car2 = new Vehicle(’Santa Fe’, 'Hyundai’)
 console.log(car1.name);    //Output: Fiesta
 console.log(car2.name);    //Output: Santa Fe

3. Using the JavaScript Keyword new:
The following example also creates a new JavaScript object with four properties:
 Example:
  var person = new Object();
  person.firstName = “John”;
  person.lastName = “Doe”;
  person.age = 50;
  person.eyeColor = “blue”;

4. Using the Object.create method:
Objects can also be created using the Object.create() method. 
  	This method can be very useful, because it allows you to choose the prototype object for the object you want to create, without having to define a constructor function.
// Animal properties and method encapsulation
  var Animal = {
  type: 'Invertebrates', // Default value of properties
   displayType: function() {  // Method which will display type of Animal
    console.log(this.type);
    }
  };
  // Create new animal type called animal1 
  var animal1 = Object.create(Animal);
  animal1.displayType(); // Output:Invertebrates
  // Create new animal type called Fishes
  var fish = Object.create(Animal);
  fish.type = 'Fishes';
  fish.displayType(); 
  // Output:Fishes



